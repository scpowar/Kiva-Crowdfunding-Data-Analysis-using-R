#| label: load libraries
#| warning: false
#| echo: true
#| results: hide
library(tidyverse)
library(leaflet)
library(knitr)
library(ggplot2)
library(tidyr)
library(tidytext)
library(stringr)
#| label: load data
#| warning: false
#| echo: true
#| results: hide
folder_name <- 'D:/NUIG BA/MS5130_Applied Analytics_R/R_A3/data/'
# Load data
kiva_loans <- read_csv(file = paste0(folder_name,"kiva_loans.csv"))
kiva_mpi_region_locations <- read_csv(file = paste0(folder_name,"kiva_mpi_region_locations.csv"))
loan_themes <- read_csv(file = paste0(folder_name,"loan_theme_ids.csv"))
#| label: Kiva Loans Data
# To check the data type of each column
str(kiva_loans)
# To view the data snippet
kable(head(kiva_loans,3))
#To get the shape of data
dim(kiva_loans)
merged_data <- kiva_loans %>%
left_join(loan_themes, by = "id")
merged_data <- merged_data %>%
left_join(kiva_mpi_region_locations, by = c("country" = "country", "region" = "region"))
merged_data <- merged_data[complete.cases(merged_data),]
names(merged_data)
ggplot(merged_data, aes(x = loan_amount)) +
geom_histogram(fill = "blue", bins = 30) +
scale_x_log10() +  # Apply log transformation to the x-axis
labs(title = "Distribution of Loan Amounts (Log Transformed X Axis)",
x = "Loan Amount (Log Scale)",
y = "Count") +
theme_minimal()
merged_data %>%
count(borrower_genders) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = "", y = n, fill = borrower_genders)) +
geom_col() +
coord_polar(theta = "y") + # Transform the bar plot into a pie chart
scale_fill_manual(values = c("female" = "#FF69B4", "male" = "#1E90FF")) +
geom_text(aes(label = paste0(round(percent, 1), "%"), y = n / 2),
position = position_stack(vjust = 0.8)) +
labs(title = "Distribution of Loans by Gender", fill = "Gender") +
theme_void()
merged_data %>%
group_by(country) %>%
summarise(Count = n()) %>%
top_n(10) %>%
ggplot(aes(x = reorder(country, Count), y = Count)) +
geom_bar(stat = "identity", fill = "green") +
coord_flip() +
labs(title = "Top 10 Countries by Number of Loans", x = "", y = "Number of Loans")
merged_data %>%
group_by(sector) %>%
summarise(Count = n()) %>%
ggplot(aes(x = reorder(sector, Count), y = Count)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(title = "Sector by Number of Loans", x = "", y = "Number of Loans")
library(tm)
texts <- Corpus(VectorSource(merged_data$use))
texts <- tm_map(texts, content_transformer(tolower))
texts <- tm_map(texts, removePunctuation)
texts <- tm_map(texts, removeWords, stopwords("english"))
dtm <- TermDocumentMatrix(texts)
matrix <- as.matrix(dtm)
word_freq <- sort(rowSums(matrix), decreasing = TRUE)
word_freq <- data.frame(word = names(word_freq), freq = word_freq)
ggplot(word_freq[1:20, ], aes(x = reorder(word, freq), y = freq)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Top 20 Words in Loan Uses", x = "", y = "Frequency")
merged_data %>%
count(borrower_genders) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = "", y = n, fill = borrower_genders)) +
geom_col() +
coord_polar(theta = "y") + # Transform the bar plot into a pie chart
scale_fill_manual(values = c("female" = "#FF69B4", "male" = "#1E90FF")) +
geom_text(aes(label = paste0(round(percent, 1), "%"), y = n / 2),
position = position_stack(vjust = 0.8)) +
labs(title = "Distribution of Loans by Gender", fill = "Gender") +
theme_void()
head(unique(merged_data$borrower_genders))
merged_data <- merged_data %>%
mutate(borrower_genders = ifelse(str_detect(borrower_genders, "female"), "female", "male"))
head(unique(merged_data$borrower_genders))
merged_data %>%
count(borrower_genders) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = "", y = n, fill = borrower_genders)) +
geom_col() +
coord_polar(theta = "y") + # Transform the bar plot into a pie chart
scale_fill_manual(values = c("female" = "#FF69B4", "male" = "#1E90FF")) +
geom_text(aes(label = paste0(round(percent, 1), "%"), y = n / 2),
position = position_stack(vjust = 0.5)) +
labs(title = "Distribution of Loans by Gender", fill = "Gender") +
theme_void()
merged_data %>%
count(borrower_genders) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = "", y = n, fill = borrower_genders)) +
geom_col() +
coord_polar(theta = "y") + # Transform the bar plot into a pie chart
scale_fill_manual(values = c("female" = "#FF69B4", "male" = "#1E90FF")) +
geom_text(aes(label = paste0(round(percent, 1), "%"), y = n / 2),
position = position_stack(vjust = 0.8)) +
labs(title = "Distribution of Loans by Gender", fill = "Gender") +
theme_void()
View(word_freq)
library(tidyr)
library(tidytext)
data %>%
unnest_tokens(word, use) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 10 Most Common Words in Loan Uses", x = "", y = "Frequency")
library(tidyr)
library(tidytext)
merged_data %>%
unnest_tokens(word, use) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Top 10 Most Common Words in Loan Uses", x = "", y = "Frequency")
table(data$category)
table(merged_data$category)
# Using ggplot2 to visualize the distribution of a categorical variable
ggplot(merged_data, aes(x = category)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribution of Categories", x = "Category", y = "Count")
names(merged_data)
table(merged_data$activity)
# Using ggplot2 to visualize the distribution of a categorical variable
ggplot(merged_data, aes(x = category)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribution of Categories", x = "Category", y = "Count")
table(merged_data$activity)
# Using ggplot2 to visualize the distribution of a categorical variable
ggplot(merged_data, aes(x = activity)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribution of Categories", x = "activity", y = "Count")
table(merged_data$activity)
# Using ggplot2 to visualize the distribution of a categorical variable
ggplot(merged_data, aes(x = activity)) +
top_n(10)+
geom_bar() +
theme_minimal() +
labs(title = "Distribution of Categories", x = "activity", y = "Count")
