---
title: "Kiva Crowdfunding Analysis Project"
author: "Shraddha Powar"
format:
  html:
    toc: true
editor: visual
---

The Kiva.org dataset provides valuable information related to loans issued over the last two years. It includes details about borrowers, their welfare levels, and other relevant factors. The dataset aims to help Kiva better understand and serve entrepreneurs around the world by assessing borrower welfare levels.

**Data Set Link:** [Data Science for Good: Kiva Crowdfunding](https://www.kaggle.com/datasets/kiva/data-science-for-good-kiva-crowdfunding/data)

# Required Libraries

```{r}
#| label: load libraries
#| warning: false
#| echo: true
#| results: hide
library(tidyverse)
library(leaflet)
library(knitr)
library(ggplot2)
library(tidyr)
library(tidytext)
library(stringr)
library(DT)
library(treemap)
library(caret)
library(reshape2)
```

# Loading the Data Set

-   **Kiva Loans (`kiva_loans.csv`)**: Records of loans made through Kiva, detailing amounts, activities, sectors, use, geographic location, and repayment information.
-   **Kiva MPI Region Locations (`kiva_mpi_region_locations.csv`)**: Geographic and MPI (Multidimensional Poverty Index) data for regions where Kiva operates, including location names, ISO codes, countries, and coordinates.
-   **Loan Theme IDs (`loan_theme_ids.csv`)**: Matches loan IDs to theme IDs and types, providing insights into the broader purpose or categorization of loans.

```{r}
#| label: load data
#| warning: false
#| echo: true
#| results: hide
folder_name <- 'D:/NUIG BA/MS5130_Applied Analytics_R/R_A3/data/'

# Load data
kiva_loans <- read_csv(file = paste0(folder_name,"kiva_loans.csv"))
kiva_mpi_region_locations <- read_csv(file = paste0(folder_name,"kiva_mpi_region_locations.csv"))
loan_themes <- read_csv(file = paste0(folder_name,"loan_theme_ids.csv"))

```

## Loan Themes

```{r}
#| label: Loan Themes 
# To check the data type of each column 
str(loan_themes)  
# To view the data snippet 
kable(head(loan_themes,3)) 
dim(loan_themes)
```

## 

# Exploratory Data Analysis

## Kiva Loans Data

```{r}
#| label: Kiva Loans Data
# To check the data type of each column
str(kiva_loans) 
# To view the data snippet
kable(head(kiva_loans,3))
#To get the shape of data
dim(kiva_loans)
```

### Loan Amount Distribution

X-axis is log transformed for better visualization

```{r}
ggplot(kiva_loans, aes(x = loan_amount)) + 
  geom_histogram(fill = "blue", bins = 30) +
  scale_x_log10() +  # Apply log transformation to the x-axis
  labs(title = "Distribution of Loan Amounts (Log Transformed X Axis)",
       x = "Loan Amount (Log Scale)", 
       y = "Count") +
  theme_minimal()
```

### Distribution of Loans by Gender

```{r}
head(unique(kiva_loans$borrower_genders))
```

```{r}
kiva_loans <- kiva_loans %>%
  mutate(borrower_genders = ifelse(str_detect(borrower_genders, "female"), "female", "male"))
```

```{r}
unique(kiva_loans$borrower_genders)
```

```{r}
kiva_loans %>%
  filter(!is.na(borrower_genders)) %>% 
  count(borrower_genders) %>%
  mutate(percent = n / sum(n) * 100) %>%
  ggplot(aes(x = "", y = n, fill = borrower_genders)) +
  geom_col() +
  coord_polar(theta = "y") + # Transform the bar plot into a pie chart
  scale_fill_manual(values = c("female" = "hotpink1", "male" = "cornflowerblue")) +
  geom_text(aes(label = paste0(round(percent, 1), "%"), y = n / 2), 
            position = position_stack(vjust = 0.8)) +
  labs(title = "Distribution of Loans by Gender", fill = "Gender") +
  theme_void()
```

### Loans by Country and Sector

#### Top Countries by Number of Loans

```{r}
kiva_loans %>% 
  group_by(country) %>% 
  summarise(Count = n()) %>% 
  top_n(10) %>% 
  ggplot(aes(x = reorder(country, Count), y = Count)) + 
  geom_bar(stat = "identity", fill = "springgreen4") + 
  coord_flip() + 
  labs(title = "Top 10 Countries by Number of Loans", x = "", y = "Number of Loans")
```

#### Loans by Sector

```{r}
kiva_loans %>% 
  group_by(sector) %>% 
  summarise(Count = n()) %>% 
  ggplot(aes(x = reorder(sector, Count), y = Count)) + 
  geom_bar(stat = "identity", fill = "orange") + 
  coord_flip() + 
  labs(title = "Sector by Number of Loans", x = "", y = "Number of Loans")
```

## Textual Analysis

To explore words most associated with education and agriculture sector.

```{r}
kiva_loans %>%
  filter(grepl("agriculture|education", sector, ignore.case = TRUE)) %>%
  unnest_tokens(word, use) %>%
  anti_join(stop_words) %>%
  count(sector, word, sort = TRUE) %>%
  group_by(sector) %>%
  top_n(5) %>%
  ungroup() %>%
  ggplot(aes(x = reorder(word, n), y = n, fill = sector)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~sector, scales = "free") +
  coord_flip() +
  labs(x = "Word", y = "Frequency", title = "Top Words in Loan Descriptions by Sector")
```

-   Helps in identifying Sector-Specific needs. For example, in agriculture, words like "buy," "fertilizer," and "seeds" suggest that loans are often sought for purchasing supplies. This insight can help Kiva to tailor their support programs to the specific need of that sector.

## Kiva MPI Region Locations

```{r}
#| label: Kiva MPI Region Locations
# To check the data type of each column
str(kiva_mpi_region_locations) 
# To view the data snippet
kable(head(kiva_mpi_region_locations,3))
#To get the shape of data
dim(kiva_mpi_region_locations)
```

### Multidimensional Poverty Index (MPI) Map

References:

1.  Learning leaflet: <https://geanders.github.io/navy_public_health/4-3-leaflet.html>
2.  For choosing the layer: <https://leaflet-extras.github.io/leaflet-providers/preview/>

```{r}
color_scheme <- colorNumeric(
  palette = colorRampPalette(c('green', 'red'))(length(kiva_mpi_region_locations$MPI)), 
  domain = kiva_mpi_region_locations$MPI)

regions_no_NA = kiva_mpi_region_locations %>%
  filter(!is.na(lon)) %>%
  filter(!is.na(lat))

leaflet(data = regions_no_NA) %>%
  addTiles() %>%
  addCircleMarkers(
    lng =  ~ lon,
    lat =  ~ lat,
    radius = ~ MPI*10,
    popup =  ~ country,
    color =  ~ color_scheme(MPI)
  ) %>%
  addProviderTiles(providers$CartoDB.Positron) %>% 
  addLegend("topleft", pal = color_scheme, values = ~MPI,
          title = "MPI Map",
           opacity = 1)
```

### Merge `kiva_mpi_region_locations` with `kiva_loans` data

```{r}
merged_data <- kiva_loans %>%
  left_join(kiva_mpi_region_locations, by = c("country" = "country", "region" = "region"))


```

### Explore Merged Data

```{r}
#| label: Merged Data
# To check the data type of each column
str(merged_data) 
# To view the data snippet
kable(head(merged_data,3))
dim(merged_data)
```

### Distribution of Funded Loan Amount By Country

```{r}
loans_funded_amount = merged_data %>%
  group_by(world_region) %>%
  summarise(FundedAmount = sum(funded_amount)) %>%
  arrange(desc(FundedAmount)) %>%
  ungroup() %>%
  mutate(world_region = reorder(world_region,FundedAmount)) %>%
  


treemap(loans_funded_amount, 
        index="world_region", 
        vSize = "FundedAmount",  
        title="Funded Amount", 
        palette = "RdBu"
)
```

### Relation between Loan Amount and Multidimensional Poverty Index

```{r}
data <- merged_data %>% 
  filter(!is.na(MPI))

ggplot(data, aes(x = MPI, y = loan_amount)) + 
  geom_point(aes(color = MPI), alpha = 0.5) + 
  scale_color_gradient(low = "yellow", high = "red") + 
  labs(title = "Loan Amount vs. Multidimensional Poverty Index (MPI)", x = "MPI", y = "Loan Amount")
```

Loan amounts tend to be higher in areas with very low Multidimensional Poverty Index (MPI) values, indicating a correlation between lower poverty levels and the ability to secure larger loans.

Conversely, in regions where the MPI is higher, reflecting greater poverty, the loan amounts accessed are significantly lower.

This pattern suggests that the extent of poverty, as measured by the MPI, may influence the scale of financial assistance provided or sought through loans.

# Kiva's Impact

[Kiva.org](https://www.kaggle.com/kiva) is an online crowd funding platform to extend financial services to poor and financially excluded people around the world. 

So the data of interest for KIVA are countries with high Multidimensional Poverty Index

```{r}
mpi_quartiles <- quantile(merged_data$MPI, probs = c(0.80), na.rm = TRUE)

# Filter data based on defined criteria
high_MPI_data <- merged_data %>%
  filter(MPI >= mpi_quartiles[1])
```

## Locations With High MPI

```{r}
high_mpi_region <- high_MPI_data %>%
  select(region,country,world_region,MPI) %>% 
  distinct() %>% 
  arrange(desc(MPI))
kable(high_mpi_region)
```

## Total Funded Amount By Kiva to High MPI Locations

```{r}
summarized_data <- high_MPI_data %>%
  group_by(LocationName) %>%
  summarise(TotalFundedAmount = sum(funded_amount)) %>%
  ungroup() %>%
  arrange(desc(TotalFundedAmount)) # Arrange in descending order of funded amount

# Plotting
ggplot(summarized_data, aes(x = reorder(LocationName, TotalFundedAmount), y = TotalFundedAmount)) +
  geom_bar(stat = "identity", fill = "red") + 
  theme_minimal() + 
  coord_flip()+
  labs(x = "High MPI Locations", y = "Total Funded Amount", title = "Total Funded Amount to High MPI Locations")

```

## Merge `loan_themes` with `high_MPI_data`

```{r}
high_MPI_data_wt_themes <- high_MPI_data %>% 
  left_join(loan_themes, by = "id")
```

## Top 5 Loan Themes in High MPI Regions

```{r}
high_MPI_data_wt_themes %>% 
  filter(!is.na(`Loan Theme Type`)) %>% 
  group_by(`Loan Theme Type`) %>% 
  summarise(Count = n()) %>% 
  top_n(5) %>% 
  ggplot(aes(x = reorder(`Loan Theme Type`, Count), y = Count)) + 
  geom_bar(stat = "identity", fill = "orange") + 
  coord_flip() + 
  labs(title = "Top 5 Loan Themes in High MPI Regions", x = "Loan Theme", y = "Count")
```

# Quantitative Analysis

Model to Predict Loan Amount By sector, LocationName & MPI

```{r}
merged_data$sector <- as.factor(merged_data$sector)
merged_data$LocationName <- as.factor(merged_data$LocationName)

merged_data <- merged_data[complete.cases(merged_data),]

# Split data into training and testing sets
set.seed(123)
index <- createDataPartition(merged_data$loan_amount, p=0.8, list=FALSE)
trainData <- merged_data[index, ]
testData <- merged_data[-index, ]

# Build the linear regression model
model <- lm(loan_amount ~ sector + MPI + LocationName, data=trainData)

# Summarize the model
summary(model)

# Predictions
predictions <- predict(model, newdata=testData)

# Measure performance
MAE <- mean(abs(predictions - testData$loan_amount))
print(paste("Mean Absolute Error:", MAE))
```

A Mean Absolute Error (MAE) of approximately 422 suggests that on average, the predictions of our model deviate from the actual values by about 422.

```{r}
merged_data %>% 
  select(loan_amount) %>% 
  summary()
```

The target variable `loan_amount` ranges between 25 and 50000 where the median is 500, an MAE of 422 suggest that the model is not performing well and there is scope for improvement

# References

Color themes: <https://bookdown.org/hneth/ds4psy/D-3-apx-colors-basics.html>
